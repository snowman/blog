#+TITLE: How to deploy Hugo on GitHub?
#+DATE: 2020-12-14T19:49:31+08:00
#+TAGS[]: help
#+CATEGORIES[]: workflow

* Link
- [[https://stackoverflow.com/questions/4750520/git-branch-gh-pages][git branch: gh-pages - Stack Overflow]]
  - GitHub has just enabled using [[https://github.com/blog/2228-simpler-github-pages-publishing][any branch and directory as the source for the docs]].

    You no longer have to use =gh-pages=.
- [[https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site][Configuring a publishing source for your GitHub Pages site - GitHub Docs]]
- [[https://pages.github.com/][GitHub Pages | Websites for you and your projects, hosted directly from your GitHub repository. Just edit, push, and your changes are live.]]
* Some questions
- [[https://discourse.gohugo.io/t/solved-what-should-be-used-for-the-value-of-site-baseurl/5896][[SOLVED] What should be used for the value of .Site.BaseURL? - support - HUGO]]
* Solution
- [[https://gohugo.io/hosting-and-deployment/hosting-on-github/#deployment-of-project-pages-from-your-gh-pages-branch][Host on GitHub | Hugo]]
* Learn
#+begin_quote
Use this is not recommended, using worktree solution provided from above instead.

This is just a note about other implmentation used by [[https://github.com/jiacai2050/jiacai2050.github.io][jiacai2050.github.io - GitHub]].
#+END_quote

You could also create branch like =gh-pages= (branch name could be any
kind), used for holding the content of =public= folder.

Switch to =master= branch, add sub-module by following steps:

#+BEGIN_SRC bash
## Format:
##   git submodule add -b gh-pages https://github.com/<username>/<repos> <folder_name>

## Add "gh-pages" branch from "https://github.com/snowman/blog" as sub-module into "public" folder
git submodule add -b gh-pages https://github.com/snowman/blog public
#+END_SRC

Modified from [[https://gohugo.io/hosting-and-deployment/hosting-on-github/#put-it-into-a-script][Host on GitHub | Hugo]], make sure submodule are cloned by running:
#+BEGIN_SRC bash
$ git submodule init
$ git submodule update
#+END_SRC

#+BEGIN_SRC bash
#!/usr/bin/env bash

# If a command fails then the deploy stops
set -e

printf "\033[0;32mDeploying updates to GitHub...\033[0m\n"

# don't remove .git
rm -rf public/*

# Build the project.
hugo # if using a theme, replace with `hugo -t <YOURTHEME>`

# Go To Public folder
cd public

# Add changes to git.
git add -A .

# Commit changes.
msg="rebuilding site $(date)"
if [ -n "$*" ]; then
    msg="$*"
fi
git commit -m "$msg"

# Push source and build repos.
## Maybe need to try "git push origin HEAD:master"
git push origin master
#+END_SRC

** see also
- [[https://stackoverflow.com/questions/8191299/update-a-submodule-to-the-latest-commit][git - Update a submodule to the latest commit - Stack Overflow]]
- [[https://www.atlassian.com/git/tutorials/git-submodule][Git submodule | Atlassian]]
- [[https://stackoverflow.com/questions/67699/how-to-clone-all-remote-branches-in-git][git branch - How to clone all remote branches in Git? - Stack Overflow]]
- [[https://stackoverflow.com/questions/5542910/how-do-i-commit-changes-in-a-git-submodule][How do I "commit" changes in a git submodule? - Stack Overflow]]

  This fixed it for me =git push origin HEAD:master=
- [[https://stackoverflow.com/questions/4181861/message-src-refspec-master-does-not-match-any-when-pushing-commits-in-git#answer-4183856][Message 'src refspec master does not match any' when pushing commits in Git - Stack Overflow]]
